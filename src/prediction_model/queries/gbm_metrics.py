"""GBM Metrics queries."""


class Queries:
    """GBM Metrics queries class."""

    UPSERT = (
        "INSERT INTO gbm_metrics ("
        "       universe_constr, "
        "       testing_start, "
        "       testing_end, "
        "       model_id, "
        "       val_criterion, "
        "       rtn_bottom, "
        "       rtn_weighted, "
        "       rtn_random, "
        "       rtn_benchmark, "
        "       mse, "
        "       rmse, "
        "       mae, "
        "       mape, "
        "       dir_acc,  "
        "       training_start, "
        "       training_end, "
        "       validation_start, "
        "       validation_end "
        ") VALUES %s "
        "ON CONFLICT (universe_constr, testing_start, testing_end, model_id, val_criterion) DO "
        "UPDATE SET "
        "       universe_constr=EXCLUDED.universe_constr, "
        "       testing_start=EXCLUDED.testing_start, "
        "       testing_end=EXCLUDED.testing_end, "
        "       model_id=EXCLUDED.model_id, "
        "       val_criterion=EXCLUDED.val_criterion, "
        "       rtn_bottom=EXCLUDED.rtn_bottom, "
        "       rtn_weighted=EXCLUDED.rtn_weighted, "
        "       rtn_random=EXCLUDED.rtn_random, "
        "       rtn_benchmark=EXCLUDED.rtn_benchmark, "
        "       mse=EXCLUDED.mse, "
        "       rmse=EXCLUDED.rmse, "
        "       mae=EXCLUDED.mae, "
        "       mape=EXCLUDED.mape, "
        "       dir_acc=EXCLUDED.dir_acc, "
        "       training_start=EXCLUDED.training_start, "
        "       training_end=EXCLUDED.training_end, "
        "       validation_start=EXCLUDED.validation_start, "
        "       validation_end=EXCLUDED.validation_end; "
    )
