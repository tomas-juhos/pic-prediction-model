"""Regression Metrics queries."""


class Queries:
    """Regression Metrics queries class."""

    UPSERT = (
        "INSERT INTO regression_metrics ("
        "       testing_start, "
        "       testing_end, "
        "       model, "
        "       train_criterion, "
        "       val_criterion, "
        "       rtn_bottom, "
        "       rtn_weighted, "
        "       rtn_random, "
        "       rtn_benchmark, "
        "       mse, "
        "       rmse, "
        "       mae, "
        "       mape, "
        "       dir_acc, "
        "       f_pvalue, "
        "       r_sqr, "
        "       training_start, "
        "       training_end, "
        "       validation_start, "
        "       validation_end "
        ") VALUES %s "
        "ON CONFLICT (testing_start, testing_end, model, train_criterion, val_criterion) DO "
        "UPDATE SET "
        "       testing_start=EXCLUDED.testing_start, "
        "       testing_end=EXCLUDED.testing_end, "
        "       model=EXCLUDED.model, "
        "       train_criterion=EXCLUDED.train_criterion, "
        "       val_criterion=EXCLUDED.val_criterion, "
        "       rtn_bottom=EXCLUDED.rtn_bottom, "
        "       rtn_weighted=EXCLUDED.rtn_weighted, "
        "       rtn_random=EXCLUDED.rtn_random, "
        "       rtn_benchmark=EXCLUDED.rtn_benchmark, "
        "       mse=EXCLUDED.mse, "
        "       rmse=EXCLUDED.rmse, "
        "       mae=EXCLUDED.mae, "
        "       mape=EXCLUDED.mape, "
        "       dir_acc=EXCLUDED.dir_acc, "
        "       f_pvalue=EXCLUDED.f_pvalue, "
        "       r_sqr=EXCLUDED.r_sqr, "
        "       training_start=EXCLUDED.training_start, "
        "       training_end=EXCLUDED.training_end, "
        "       validation_start=EXCLUDED.validation_start, "
        "       validation_end=EXCLUDED.validation_end; "
    )
